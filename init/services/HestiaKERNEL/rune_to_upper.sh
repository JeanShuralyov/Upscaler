#!/bin/sh
# Copyright 2024 HestiaKERNEL Authors
#
#
# Licensed under (Holloway) Chew, Kean Hoâ€™s Liberal License (the "License").
# You must comply with the license to use the content. Get the License at:
#
#                 https://doi.org/10.5281/zenodo.13770769
#
# You MUST ensure any interaction with the content STRICTLY COMPLIES with
# the permissions and limitations set forth in the license.

# WARNING - Autogenerated script from 'HestiaKERNEL/src/unicode/data-parser.sh'.
#           DO NOT EDIT MANUALLY!




hestiakernel_rune_to_upper() {
        ___char_decimal="$1"
        ___next_decimal="$2"
        ___third_decimal="$3"
        ___to_title="$4"
        ___locale="$5"


        # validate input
        if [ "$___char_decimal" = "" ]; then
                # ERROR - bad input
                printf -- ""
                return 1
        fi


        # language sensitive special cases
        case "$5" in
        az*|tr*)
                # Turkish & Azerbaijani
                case "$___char_decimal" in
                0x0069)
                        printf -- "%s" "[1]304"
                        return 0
                        ;;
                0x0131)
                        printf -- "%s" "[1]73"
                        return 0
                        ;;
                esac
                ;;
        lt*)
                # Lithuanian
                case "$___char_decimal" in
                0x0069)
                        case "$___next_decimal" in
                        0x0307)
                                case "$___third_decimal" in
                                0x0300)
                                        printf -- "%s" "[3]204"
                                        return 0
                                        ;;
                                0x0301)
                                        printf -- "%s" "[3]205"
                                        return 0
                                        ;;
                                0x0303)
                                        printf -- "%s" "[3]296"
                                        return 0
                                        ;;
                                *)
                                        printf -- "%s" "[2]73"
                                        return 0
                                        ;;
                                esac
                                ;;
                        esac
                        ;;
                0x006A)
                        case "$___next_decimal" in
                        0x0307)
                                printf -- "%s" "[2]74"
                                return 0
                                ;;
                        esac
                        ;;
                0x012F)
                        case "$___next_decimal" in
                        0x0307)
                                printf -- "%s" "[2]302"
                                return 0
                                ;;
                        esac
                        ;;
                0x0307)
                        printf -- "%s" "[1]"
                        return 0
                        ;;
                esac
                ;;
        esac


        # language insensitive special cases
        case "$___char_decimal" in
        0x0041)
                case "$___next_decimal" in
                0x02BE)
                        ;;
                esac
                ;;
        0x0046)
                case "$___next_decimal" in
                0x0046)
                        case "$___third_decimal" in
                        0x0049)
                                ;;
                        0x004C)
                                ;;
                        *)
                                ;;
                        esac
                        ;;
                0x0049)
                        ;;
                0x004C)
                        ;;
                0x0066)
                        case "$___third_decimal" in
                        0x0069)
                                printf -- "%s" "[3]70, 70, 73"
                                return 0
                                ;;
                        0x006C)
                                printf -- "%s" "[3]70, 70, 76"
                                return 0
                                ;;
                        *)
                                printf -- "%s" "[2]70, 70"
                                return 0
                                ;;
                        esac
                        ;;
                0x0069)
                        printf -- "%s" "[2]70, 73"
                        return 0
                        ;;
                0x006C)
                        printf -- "%s" "[2]70, 76"
                        return 0
                        ;;
                esac
                ;;
        0x0048)
                case "$___next_decimal" in
                0x0331)
                        ;;
                esac
                ;;
        0x004A)
                case "$___next_decimal" in
                0x030C)
                        ;;
                esac
                ;;
        0x0053)
                case "$___next_decimal" in
                0x0053)
                        ;;
                0x0054)
                        ;;
                0x0073)
                        printf -- "%s" "[2]83, 83"
                        return 0
                        ;;
                0x0074)
                        printf -- "%s" "[2]83, 84"
                        return 0
                        ;;
                esac
                ;;
        0x0054)
                case "$___next_decimal" in
                0x0308)
                        ;;
                esac
                ;;
        0x0057)
                case "$___next_decimal" in
                0x030A)
                        ;;
                esac
                ;;
        0x0059)
                case "$___next_decimal" in
                0x030A)
                        ;;
                esac
                ;;
        0x0069)
                case "$___next_decimal" in
                0x0307)
                        printf -- "%s" "[2]304"
                        return 0
                        ;;
                esac
                ;;
        0x00DF)
                printf -- "%s" "[1]83, 83"
                return 0
                ;;
        0x0130)
                ;;
        0x0149)
                printf -- "%s" "[1]700, 78"
                return 0
                ;;
        0x01F0)
                printf -- "%s" "[1]74, 780"
                return 0
                ;;
        0x02BC)
                case "$___next_decimal" in
                0x004E)
                        ;;
                esac
                ;;
        0x0386)
                case "$___next_decimal" in
                0x0345)
                        printf -- "%s" "[2]902, 921"
                        return 0
                        ;;
                0x0399)
                        ;;
                esac
                ;;
        0x0389)
                case "$___next_decimal" in
                0x0345)
                        printf -- "%s" "[2]905, 921"
                        return 0
                        ;;
                0x0399)
                        ;;
                esac
                ;;
        0x038F)
                case "$___next_decimal" in
                0x0345)
                        printf -- "%s" "[2]911, 921"
                        return 0
                        ;;
                0x0399)
                        ;;
                esac
                ;;
        0x0390)
                printf -- "%s" "[1]921, 776, 769"
                return 0
                ;;
        0x0391)
                case "$___next_decimal" in
                0x0342)
                        case "$___third_decimal" in
                        0x0345)
                                printf -- "%s" "[3]913, 834, 921"
                                return 0
                                ;;
                        0x0399)
                                ;;
                        *)
                                ;;
                        esac
                        ;;
                0x0399)
                        ;;
                esac
                ;;
        0x0397)
                case "$___next_decimal" in
                0x0342)
                        case "$___third_decimal" in
                        0x0345)
                                printf -- "%s" "[3]919, 834, 921"
                                return 0
                                ;;
                        0x0399)
                                ;;
                        *)
                                ;;
                        esac
                        ;;
                0x0399)
                        ;;
                esac
                ;;
        0x0399)
                case "$___next_decimal" in
                0x0308)
                        case "$___third_decimal" in
                        0x0300)
                                ;;
                        0x0301)
                                ;;
                        0x0342)
                                ;;
                        esac
                        ;;
                0x0342)
                        ;;
                esac
                ;;
        0x03A1)
                case "$___next_decimal" in
                0x0313)
                        ;;
                esac
                ;;
        0x03A3)
                ;;
        0x03A5)
                case "$___next_decimal" in
                0x0308)
                        case "$___third_decimal" in
                        0x0300)
                                ;;
                        0x0301)
                                ;;
                        0x0342)
                                ;;
                        esac
                        ;;
                0x0313)
                        case "$___third_decimal" in
                        0x0300)
                                ;;
                        0x0301)
                                ;;
                        0x0342)
                                ;;
                        *)
                                ;;
                        esac
                        ;;
                0x0342)
                        ;;
                esac
                ;;
        0x03A9)
                case "$___next_decimal" in
                0x0342)
                        case "$___third_decimal" in
                        0x0345)
                                printf -- "%s" "[3]937, 834, 921"
                                return 0
                                ;;
                        0x0399)
                                ;;
                        *)
                                ;;
                        esac
                        ;;
                0x0399)
                        ;;
                esac
                ;;
        0x03B0)
                printf -- "%s" "[1]933, 776, 769"
                return 0
                ;;
        0x03C2)
                printf -- "%s" "[1]931"
                return 0
                ;;
        0x0535)
                case "$___next_decimal" in
                0x0552)
                        ;;
                0x0582)
                        printf -- "%s" "[2]1333, 1362"
                        return 0
                        ;;
                esac
                ;;
        0x0544)
                case "$___next_decimal" in
                0x0535)
                        ;;
                0x053B)
                        ;;
                0x053D)
                        ;;
                0x0546)
                        ;;
                0x0565)
                        printf -- "%s" "[2]1348, 1333"
                        return 0
                        ;;
                0x056B)
                        printf -- "%s" "[2]1348, 1339"
                        return 0
                        ;;
                0x056D)
                        printf -- "%s" "[2]1348, 1341"
                        return 0
                        ;;
                0x0576)
                        printf -- "%s" "[2]1348, 1350"
                        return 0
                        ;;
                esac
                ;;
        0x054E)
                case "$___next_decimal" in
                0x0546)
                        ;;
                0x0576)
                        printf -- "%s" "[2]1358, 1350"
                        return 0
                        ;;
                esac
                ;;
        0x0587)
                printf -- "%s" "[1]1333, 1362"
                return 0
                ;;
        0x1E96)
                printf -- "%s" "[1]72, 817"
                return 0
                ;;
        0x1E97)
                printf -- "%s" "[1]84, 776"
                return 0
                ;;
        0x1E98)
                printf -- "%s" "[1]87, 778"
                return 0
                ;;
        0x1E99)
                printf -- "%s" "[1]89, 778"
                return 0
                ;;
        0x1E9A)
                printf -- "%s" "[1]65, 702"
                return 0
                ;;
        0x1F08)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F09)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F0A)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F0B)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F0C)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F0D)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F0E)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F0F)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F28)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F29)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F2A)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F2B)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F2C)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F2D)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F2E)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F2F)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F50)
                printf -- "%s" "[1]933, 787"
                return 0
                ;;
        0x1F52)
                printf -- "%s" "[1]933, 787, 768"
                return 0
                ;;
        0x1F54)
                printf -- "%s" "[1]933, 787, 769"
                return 0
                ;;
        0x1F56)
                printf -- "%s" "[1]933, 787, 834"
                return 0
                ;;
        0x1F68)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F69)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F6A)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F6B)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F6C)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F6D)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F6E)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F6F)
                case "$___next_decimal" in
                0x0399)
                        ;;
                esac
                ;;
        0x1F80)
                printf -- "%s" "[1]7944, 921"
                return 0
                ;;
        0x1F81)
                printf -- "%s" "[1]7945, 921"
                return 0
                ;;
        0x1F82)
                printf -- "%s" "[1]7946, 921"
                return 0
                ;;
        0x1F83)
                printf -- "%s" "[1]7947, 921"
                return 0
                ;;
        0x1F84)
                printf -- "%s" "[1]7948, 921"
                return 0
                ;;
        0x1F85)
                printf -- "%s" "[1]7949, 921"
                return 0
                ;;
        0x1F86)
                printf -- "%s" "[1]7950, 921"
                return 0
                ;;
        0x1F87)
                printf -- "%s" "[1]7951, 921"
                return 0
                ;;
        0x1F88)
                printf -- "%s" "[1]7944, 921"
                return 0
                ;;
        0x1F89)
                printf -- "%s" "[1]7945, 921"
                return 0
                ;;
        0x1F8A)
                printf -- "%s" "[1]7946, 921"
                return 0
                ;;
        0x1F8B)
                printf -- "%s" "[1]7947, 921"
                return 0
                ;;
        0x1F8C)
                printf -- "%s" "[1]7948, 921"
                return 0
                ;;
        0x1F8D)
                printf -- "%s" "[1]7949, 921"
                return 0
                ;;
        0x1F8E)
                printf -- "%s" "[1]7950, 921"
                return 0
                ;;
        0x1F8F)
                printf -- "%s" "[1]7951, 921"
                return 0
                ;;
        0x1F90)
                printf -- "%s" "[1]7976, 921"
                return 0
                ;;
        0x1F91)
                printf -- "%s" "[1]7977, 921"
                return 0
                ;;
        0x1F92)
                printf -- "%s" "[1]7978, 921"
                return 0
                ;;
        0x1F93)
                printf -- "%s" "[1]7979, 921"
                return 0
                ;;
        0x1F94)
                printf -- "%s" "[1]7980, 921"
                return 0
                ;;
        0x1F95)
                printf -- "%s" "[1]7981, 921"
                return 0
                ;;
        0x1F96)
                printf -- "%s" "[1]7982, 921"
                return 0
                ;;
        0x1F97)
                printf -- "%s" "[1]7983, 921"
                return 0
                ;;
        0x1F98)
                printf -- "%s" "[1]7976, 921"
                return 0
                ;;
        0x1F99)
                printf -- "%s" "[1]7977, 921"
                return 0
                ;;
        0x1F9A)
                printf -- "%s" "[1]7978, 921"
                return 0
                ;;
        0x1F9B)
                printf -- "%s" "[1]7979, 921"
                return 0
                ;;
        0x1F9C)
                printf -- "%s" "[1]7980, 921"
                return 0
                ;;
        0x1F9D)
                printf -- "%s" "[1]7981, 921"
                return 0
                ;;
        0x1F9E)
                printf -- "%s" "[1]7982, 921"
                return 0
                ;;
        0x1F9F)
                printf -- "%s" "[1]7983, 921"
                return 0
                ;;
        0x1FA0)
                printf -- "%s" "[1]8040, 921"
                return 0
                ;;
        0x1FA1)
                printf -- "%s" "[1]8041, 921"
                return 0
                ;;
        0x1FA2)
                printf -- "%s" "[1]8042, 921"
                return 0
                ;;
        0x1FA3)
                printf -- "%s" "[1]8043, 921"
                return 0
                ;;
        0x1FA4)
                printf -- "%s" "[1]8044, 921"
                return 0
                ;;
        0x1FA5)
                printf -- "%s" "[1]8045, 921"
                return 0
                ;;
        0x1FA6)
                printf -- "%s" "[1]8046, 921"
                return 0
                ;;
        0x1FA7)
                printf -- "%s" "[1]8047, 921"
                return 0
                ;;
        0x1FA8)
                printf -- "%s" "[1]8040, 921"
                return 0
                ;;
        0x1FA9)
                printf -- "%s" "[1]8041, 921"
                return 0
                ;;
        0x1FAA)
                printf -- "%s" "[1]8042, 921"
                return 0
                ;;
        0x1FAB)
                printf -- "%s" "[1]8043, 921"
                return 0
                ;;
        0x1FAC)
                printf -- "%s" "[1]8044, 921"
                return 0
                ;;
        0x1FAD)
                printf -- "%s" "[1]8045, 921"
                return 0
                ;;
        0x1FAE)
                printf -- "%s" "[1]8046, 921"
                return 0
                ;;
        0x1FAF)
                printf -- "%s" "[1]8047, 921"
                return 0
                ;;
        0x1FB2)
                printf -- "%s" "[1]8122, 921"
                return 0
                ;;
        0x1FB3)
                printf -- "%s" "[1]913, 921"
                return 0
                ;;
        0x1FB4)
                printf -- "%s" "[1]902, 921"
                return 0
                ;;
        0x1FB6)
                printf -- "%s" "[1]913, 834"
                return 0
                ;;
        0x1FB7)
                printf -- "%s" "[1]913, 834, 921"
                return 0
                ;;
        0x1FBA)
                case "$___next_decimal" in
                0x0345)
                        printf -- "%s" "[2]8122, 921"
                        return 0
                        ;;
                0x0399)
                        ;;
                esac
                ;;
        0x1FBC)
                printf -- "%s" "[1]913, 921"
                return 0
                ;;
        0x1FC2)
                printf -- "%s" "[1]8138, 921"
                return 0
                ;;
        0x1FC3)
                printf -- "%s" "[1]919, 921"
                return 0
                ;;
        0x1FC4)
                printf -- "%s" "[1]905, 921"
                return 0
                ;;
        0x1FC6)
                printf -- "%s" "[1]919, 834"
                return 0
                ;;
        0x1FC7)
                printf -- "%s" "[1]919, 834, 921"
                return 0
                ;;
        0x1FCA)
                case "$___next_decimal" in
                0x0345)
                        printf -- "%s" "[2]8138, 921"
                        return 0
                        ;;
                0x0399)
                        ;;
                esac
                ;;
        0x1FCC)
                printf -- "%s" "[1]919, 921"
                return 0
                ;;
        0x1FD2)
                printf -- "%s" "[1]921, 776, 768"
                return 0
                ;;
        0x1FD6)
                printf -- "%s" "[1]921, 834"
                return 0
                ;;
        0x1FD7)
                printf -- "%s" "[1]921, 776, 834"
                return 0
                ;;
        0x1FE2)
                printf -- "%s" "[1]933, 776, 768"
                return 0
                ;;
        0x1FE4)
                printf -- "%s" "[1]929, 787"
                return 0
                ;;
        0x1FE6)
                printf -- "%s" "[1]933, 834"
                return 0
                ;;
        0x1FE7)
                printf -- "%s" "[1]933, 776, 834"
                return 0
                ;;
        0x1FF2)
                printf -- "%s" "[1]8186, 921"
                return 0
                ;;
        0x1FF3)
                printf -- "%s" "[1]937, 921"
                return 0
                ;;
        0x1FF4)
                printf -- "%s" "[1]911, 921"
                return 0
                ;;
        0x1FF6)
                printf -- "%s" "[1]937, 834"
                return 0
                ;;
        0x1FF7)
                printf -- "%s" "[1]937, 834, 921"
                return 0
                ;;
        0x1FFA)
                case "$___next_decimal" in
                0x0345)
                        printf -- "%s" "[2]8186, 921"
                        return 0
                        ;;
                0x0399)
                        ;;
                esac
                ;;
        0x1FFC)
                printf -- "%s" "[1]937, 921"
                return 0
                ;;
        0xFB00)
                printf -- "%s" "[1]70, 70"
                return 0
                ;;
        0xFB01)
                printf -- "%s" "[1]70, 73"
                return 0
                ;;
        0xFB02)
                printf -- "%s" "[1]70, 76"
                return 0
                ;;
        0xFB03)
                printf -- "%s" "[1]70, 70, 73"
                return 0
                ;;
        0xFB04)
                printf -- "%s" "[1]70, 70, 76"
                return 0
                ;;
        0xFB06)
                printf -- "%s" "[1]83, 84"
                return 0
                ;;
        0xFB13)
                printf -- "%s" "[1]1348, 1350"
                return 0
                ;;
        0xFB14)
                printf -- "%s" "[1]1348, 1333"
                return 0
                ;;
        0xFB15)
                printf -- "%s" "[1]1348, 1339"
                return 0
                ;;
        0xFB16)
                printf -- "%s" "[1]1358, 1350"
                return 0
                ;;
        0xFB17)
                printf -- "%s" "[1]1348, 1341"
                return 0
                ;;
        esac


        # switching non-special 1:1 casing now
        if   [ $___char_decimal -ge 97 ] && [ $___char_decimal -le 122 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 32))"
                return 0
        elif [ $___char_decimal -ge 224 ] && [ $___char_decimal -le 246 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 32))"
                return 0
        elif [ $___char_decimal -ge 248 ] && [ $___char_decimal -le 254 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 32))"
                return 0
        elif [ $___char_decimal -eq 255 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 121))"
                return 0
        elif [ $___char_decimal -eq 257 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 259 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 261 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 263 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 265 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 267 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 269 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 271 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 273 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 275 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 277 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 279 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 281 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 283 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 285 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 287 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 289 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 291 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 293 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 295 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 297 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 299 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 301 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 303 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 305 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 232))"
                return 0
        elif [ $___char_decimal -eq 307 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 309 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 311 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 314 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 316 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 318 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 320 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 322 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 324 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 326 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 328 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 331 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 333 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 335 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 337 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 339 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 341 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 343 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 345 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 347 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 349 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 351 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 353 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 355 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 357 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 359 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 361 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 363 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 365 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 367 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 369 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 371 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 373 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 375 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 378 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 380 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 382 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 383 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 300))"
                return 0
        elif [ $___char_decimal -eq 384 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 195))"
                return 0
        elif [ $___char_decimal -eq 387 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 389 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 392 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 396 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 402 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 405 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 97))"
                return 0
        elif [ $___char_decimal -eq 409 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 410 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 163))"
                return 0
        elif [ $___char_decimal -eq 414 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 130))"
                return 0
        elif [ $___char_decimal -eq 417 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 419 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 421 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 424 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 429 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 432 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 436 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 438 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 441 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 445 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 454 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 457 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 460 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 462 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 464 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 466 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 468 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 470 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 472 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 474 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 476 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 477 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 79))"
                return 0
        elif [ $___char_decimal -eq 479 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 481 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 483 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 485 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 487 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 489 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 491 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 493 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 495 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 499 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 501 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 505 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 507 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 509 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 511 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 513 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 515 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 517 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 519 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 521 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 523 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 525 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 527 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 529 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 531 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 533 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 535 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 537 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 539 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 541 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 543 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 547 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 549 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 551 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 553 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 555 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 557 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 559 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 561 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 563 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 572 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -ge 575 ] && [ $___char_decimal -le 576 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 10815))"
                return 0
        elif [ $___char_decimal -eq 578 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 583 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 585 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 587 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 589 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 591 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 592 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 10783))"
                return 0
        elif [ $___char_decimal -eq 593 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 10780))"
                return 0
        elif [ $___char_decimal -eq 594 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 10782))"
                return 0
        elif [ $___char_decimal -eq 595 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 210))"
                return 0
        elif [ $___char_decimal -eq 596 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 206))"
                return 0
        elif [ $___char_decimal -ge 598 ] && [ $___char_decimal -le 599 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 205))"
                return 0
        elif [ $___char_decimal -eq 601 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 202))"
                return 0
        elif [ $___char_decimal -eq 603 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 203))"
                return 0
        elif [ $___char_decimal -eq 604 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 42319))"
                return 0
        elif [ $___char_decimal -eq 608 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 205))"
                return 0
        elif [ $___char_decimal -eq 609 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 42315))"
                return 0
        elif [ $___char_decimal -eq 611 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 207))"
                return 0
        elif [ $___char_decimal -eq 613 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 42280))"
                return 0
        elif [ $___char_decimal -eq 614 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 42308))"
                return 0
        elif [ $___char_decimal -eq 616 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 209))"
                return 0
        elif [ $___char_decimal -eq 617 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 211))"
                return 0
        elif [ $___char_decimal -eq 619 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 10743))"
                return 0
        elif [ $___char_decimal -eq 620 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 42305))"
                return 0
        elif [ $___char_decimal -eq 623 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 211))"
                return 0
        elif [ $___char_decimal -eq 625 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 10749))"
                return 0
        elif [ $___char_decimal -eq 626 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 213))"
                return 0
        elif [ $___char_decimal -eq 629 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 214))"
                return 0
        elif [ $___char_decimal -eq 637 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 10727))"
                return 0
        elif [ $___char_decimal -eq 642 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 42307))"
                return 0
        elif [ $___char_decimal -eq 643 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 218))"
                return 0
        elif [ $___char_decimal -eq 647 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 42282))"
                return 0
        elif [ $___char_decimal -eq 648 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 218))"
                return 0
        elif [ $___char_decimal -eq 649 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 69))"
                return 0
        elif [ $___char_decimal -ge 650 ] && [ $___char_decimal -le 651 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 217))"
                return 0
        elif [ $___char_decimal -eq 652 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 71))"
                return 0
        elif [ $___char_decimal -eq 658 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 219))"
                return 0
        elif [ $___char_decimal -eq 669 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 42261))"
                return 0
        elif [ $___char_decimal -eq 670 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 42258))"
                return 0
        elif [ $___char_decimal -eq 881 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 883 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 887 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -ge 891 ] && [ $___char_decimal -le 893 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 130))"
                return 0
        elif [ $___char_decimal -eq 940 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 38))"
                return 0
        elif [ $___char_decimal -ge 941 ] && [ $___char_decimal -le 943 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 37))"
                return 0
        elif [ $___char_decimal -ge 945 ] && [ $___char_decimal -le 961 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 32))"
                return 0
        elif [ $___char_decimal -eq 962 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 31))"
                return 0
        elif [ $___char_decimal -ge 963 ] && [ $___char_decimal -le 971 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 32))"
                return 0
        elif [ $___char_decimal -eq 972 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 64))"
                return 0
        elif [ $___char_decimal -ge 973 ] && [ $___char_decimal -le 974 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 63))"
                return 0
        elif [ $___char_decimal -eq 985 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 987 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 989 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 991 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 993 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 995 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 997 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 999 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1001 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1003 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1005 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1007 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1016 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1019 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -ge 1072 ] && [ $___char_decimal -le 1103 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 32))"
                return 0
        elif [ $___char_decimal -ge 1104 ] && [ $___char_decimal -le 1119 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 80))"
                return 0
        elif [ $___char_decimal -eq 1121 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1123 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1125 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1127 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1129 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1131 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1133 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1135 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1137 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1139 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1141 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1143 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1145 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1147 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1149 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1151 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1153 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1163 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1165 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1167 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1169 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1171 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1173 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1175 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1177 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1179 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1181 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1183 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1185 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1187 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1189 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1191 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1193 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1195 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1197 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1199 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1201 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1203 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1205 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1207 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1209 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1211 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1213 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1215 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1218 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1220 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1222 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1224 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1226 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1228 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1230 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1231 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 15))"
                return 0
        elif [ $___char_decimal -eq 1233 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1235 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1237 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1239 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1241 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1243 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1245 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1247 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1249 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1251 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1253 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1255 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1257 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1259 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1261 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1263 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1265 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1267 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1269 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1271 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1273 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1275 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1277 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1279 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1281 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1283 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1285 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1287 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1289 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1291 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1293 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1295 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1297 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1299 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1301 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1303 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1305 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1307 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1309 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1311 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1313 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1315 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1317 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1319 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1321 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1323 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1325 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 1327 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -ge 1377 ] && [ $___char_decimal -le 1414 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 48))"
                return 0
        elif [ $___char_decimal -ge 5112 ] && [ $___char_decimal -le 5117 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 8))"
                return 0
        elif [ $___char_decimal -eq 7296 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 6254))"
                return 0
        elif [ $___char_decimal -eq 7297 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 6253))"
                return 0
        elif [ $___char_decimal -eq 7298 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 6244))"
                return 0
        elif [ $___char_decimal -ge 7299 ] && [ $___char_decimal -le 7300 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 6242))"
                return 0
        elif [ $___char_decimal -eq 7301 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 6243))"
                return 0
        elif [ $___char_decimal -eq 7302 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 6236))"
                return 0
        elif [ $___char_decimal -eq 7303 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 6181))"
                return 0
        elif [ $___char_decimal -eq 7304 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 35266))"
                return 0
        elif [ $___char_decimal -eq 7545 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 35332))"
                return 0
        elif [ $___char_decimal -eq 7549 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 3814))"
                return 0
        elif [ $___char_decimal -eq 7566 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 35384))"
                return 0
        elif [ $___char_decimal -eq 7681 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7683 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7685 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7687 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7689 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7691 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7693 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7695 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7697 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7699 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7701 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7703 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7705 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7707 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7709 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7711 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7713 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7715 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7717 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7719 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7721 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7723 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7725 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7727 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7729 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7731 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7733 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7735 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7737 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7739 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7741 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7743 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7745 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7747 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7749 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7751 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7753 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7755 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7757 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7759 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7761 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7763 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7765 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7767 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7769 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7771 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7773 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7775 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7777 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7779 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7781 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7783 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7785 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7787 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7789 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7791 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7793 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7795 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7797 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7799 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7801 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7803 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7805 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7807 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7809 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7811 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7813 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7815 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7817 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7819 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7821 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7823 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7825 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7827 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7829 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7835 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 59))"
                return 0
        elif [ $___char_decimal -eq 7841 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7843 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7845 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7847 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7849 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7851 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7853 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7855 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7857 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7859 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7861 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7863 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7865 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7867 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7869 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7871 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7873 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7875 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7877 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7879 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7881 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7883 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7885 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7887 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7889 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7891 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7893 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7895 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7897 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7899 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7901 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7903 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7905 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7907 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7909 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7911 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7913 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7915 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7917 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7919 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7921 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7923 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7925 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7927 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7929 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7931 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7933 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 7935 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -ge 7936 ] && [ $___char_decimal -le 7943 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -ge 7952 ] && [ $___char_decimal -le 7957 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -ge 7968 ] && [ $___char_decimal -le 7975 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -ge 7984 ] && [ $___char_decimal -le 7991 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -ge 8000 ] && [ $___char_decimal -le 8005 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -eq 8017 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -eq 8019 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -eq 8021 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -eq 8023 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -ge 8032 ] && [ $___char_decimal -le 8039 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -ge 8048 ] && [ $___char_decimal -le 8049 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 74))"
                return 0
        elif [ $___char_decimal -ge 8050 ] && [ $___char_decimal -le 8053 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 86))"
                return 0
        elif [ $___char_decimal -ge 8054 ] && [ $___char_decimal -le 8055 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 100))"
                return 0
        elif [ $___char_decimal -ge 8056 ] && [ $___char_decimal -le 8057 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 128))"
                return 0
        elif [ $___char_decimal -ge 8058 ] && [ $___char_decimal -le 8059 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 112))"
                return 0
        elif [ $___char_decimal -ge 8060 ] && [ $___char_decimal -le 8061 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 126))"
                return 0
        elif [ $___char_decimal -ge 8064 ] && [ $___char_decimal -le 8071 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -ge 8080 ] && [ $___char_decimal -le 8087 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -ge 8096 ] && [ $___char_decimal -le 8103 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -ge 8112 ] && [ $___char_decimal -le 8113 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -eq 8115 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 9))"
                return 0
        elif [ $___char_decimal -eq 8131 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 9))"
                return 0
        elif [ $___char_decimal -ge 8144 ] && [ $___char_decimal -le 8145 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -ge 8160 ] && [ $___char_decimal -le 8161 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 8))"
                return 0
        elif [ $___char_decimal -eq 8165 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 7))"
                return 0
        elif [ $___char_decimal -eq 8179 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 9))"
                return 0
        elif [ $___char_decimal -eq 8526 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 28))"
                return 0
        elif [ $___char_decimal -ge 8560 ] && [ $___char_decimal -le 8575 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 16))"
                return 0
        elif [ $___char_decimal -eq 8580 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -ge 9424 ] && [ $___char_decimal -le 9449 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 26))"
                return 0
        elif [ $___char_decimal -ge 11312 ] && [ $___char_decimal -le 11359 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 48))"
                return 0
        elif [ $___char_decimal -eq 11361 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11365 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 10795))"
                return 0
        elif [ $___char_decimal -eq 11366 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 10792))"
                return 0
        elif [ $___char_decimal -eq 11368 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11370 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11372 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11379 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11382 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11393 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11395 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11397 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11399 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11401 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11403 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11405 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11407 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11409 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11411 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11413 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11415 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11417 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11419 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11421 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11423 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11425 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11427 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11429 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11431 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11433 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11435 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11437 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11439 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11441 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11443 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11445 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11447 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11449 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11451 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11453 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11455 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11457 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11459 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11461 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11463 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11465 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11467 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11469 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11471 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11473 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11475 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11477 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11479 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11481 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11483 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11485 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11487 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11489 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11491 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11500 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11502 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 11507 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -ge 11520 ] && [ $___char_decimal -le 11557 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 7264))"
                return 0
        elif [ $___char_decimal -eq 11559 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 7264))"
                return 0
        elif [ $___char_decimal -eq 11565 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 7264))"
                return 0
        elif [ $___char_decimal -eq 42561 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42563 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42565 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42567 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42569 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42571 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42573 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42575 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42577 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42579 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42581 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42583 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42585 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42587 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42589 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42591 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42593 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42595 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42597 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42599 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42601 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42603 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42605 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42625 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42627 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42629 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42631 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42633 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42635 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42637 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42639 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42641 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42643 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42645 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42647 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42649 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42651 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42787 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42789 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42791 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42793 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42795 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42797 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42799 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42803 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42805 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42807 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42809 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42811 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42813 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42815 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42817 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42819 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42821 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42823 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42825 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42827 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42829 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42831 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42833 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42835 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42837 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42839 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42841 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42843 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42845 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42847 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42849 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42851 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42853 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42855 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42857 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42859 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42861 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42863 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42874 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42876 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42879 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42881 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42883 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42885 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42887 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42892 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42897 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42899 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42900 ]; then
                printf -- "%s" "[1]$(($___char_decimal + 48))"
                return 0
        elif [ $___char_decimal -eq 42903 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42905 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42907 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42909 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42911 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42913 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42915 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42917 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42919 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42921 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42933 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42935 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42937 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42939 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42941 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42943 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42945 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42947 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42952 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42954 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42961 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42967 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42969 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 42998 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 1))"
                return 0
        elif [ $___char_decimal -eq 43859 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 928))"
                return 0
        elif [ $___char_decimal -ge 43888 ] && [ $___char_decimal -le 43967 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 38864))"
                return 0
        elif [ $___char_decimal -ge 65345 ] && [ $___char_decimal -le 65370 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 32))"
                return 0
        elif [ $___char_decimal -ge 66600 ] && [ $___char_decimal -le 66639 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 40))"
                return 0
        elif [ $___char_decimal -ge 66776 ] && [ $___char_decimal -le 66811 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 40))"
                return 0
        elif [ $___char_decimal -ge 66967 ] && [ $___char_decimal -le 66977 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 39))"
                return 0
        elif [ $___char_decimal -ge 66979 ] && [ $___char_decimal -le 66993 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 39))"
                return 0
        elif [ $___char_decimal -ge 66995 ] && [ $___char_decimal -le 67001 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 39))"
                return 0
        elif [ $___char_decimal -ge 67003 ] && [ $___char_decimal -le 67004 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 39))"
                return 0
        elif [ $___char_decimal -ge 68800 ] && [ $___char_decimal -le 68850 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 64))"
                return 0
        elif [ $___char_decimal -ge 71872 ] && [ $___char_decimal -le 71903 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 32))"
                return 0
        elif [ $___char_decimal -ge 93792 ] && [ $___char_decimal -le 93823 ]; then
                printf -- "%s" "[1]$(($___char_decimal - 32))"
                return 0
        else
                printf -- "%s" "[1]${___char_decimal}"
                return 0
        fi
}
